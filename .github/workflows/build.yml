name: Build
on:
  workflow_dispatch:
    inputs:
      email:
        description: email address for completion notice
        required: true
      patchsets:
        description: JSON map { project => patchset }
        required: true

permissions: {}

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - name: Generate job matrix
        id: gen-matrix
        run: |
          matrix=$(jq -c 'with_entries(select(.key != "ndn-cxx" and .value != "skip")) | keys | {proj: .}' \
                   <<< '${{ github.event.inputs.patchsets }}')
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-22.04
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
      fail-fast: false
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          DEPS=$(sort -u ndn-cxx.deps ${{ matrix.proj }}.deps)
          echo Installing ${DEPS}
          sudo apt-get -qq update
          sudo apt-get -qq install ${DEPS}
      - name: Prepare PATCHSET_* environment variables
        run: |
          echo '${{ github.event.inputs.patchsets }}' | \
            jq -r 'to_entries[] | "PATCHSET_" + (.key | gsub("-"; "") | ascii_upcase) + "=" + .value' | \
            tee >(cat 1>&2) >> $GITHUB_ENV
      - name: Build and install ndn-cxx
        run: ./ndn-cxx.sh
      - name: Build and test ${{ matrix.proj }}
        run: ./${{ matrix.proj }}.sh
        env:
          BOOST_TEST_COLOR_OUTPUT: yes
          BOOST_TEST_LOG_LEVEL: test_suite

  notify:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Retrieve build results
        run: |
          curl -fsLS "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/jobs" > jobs.json
          jq -r '.jobs[] | select((.name | startswith("build ")) and .conclusion == "success") | .name' \
            jobs.json > success.txt
          jq -r '.jobs[] | select((.name | startswith("build ")) and .conclusion != "success") | .name' \
            jobs.json > failure.txt
      - name: Prepare email body
        run: |
          (
            echo "$(wc -l < success.txt) successful jobs"
            sed 's/^/  /' success.txt
            echo
            echo "$(wc -l < failure.txt) failed jobs"
            sed 's/^/  /' failure.txt
            echo
            echo "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          ) | tee body.txt
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: taylor.mxrouting.net
          server_port: 465
          username: ndn-cxx-breaks@ndn.today
          password: ${{ secrets.MXROUTE_PASSWORD }}
          from: ndn-cxx-breaks
          to: ${{ github.event.inputs.email }}
          subject: ndn-cxx-breaks result ${{ github.run_id }}
          body: file://body.txt
